<?xml version="1.0" encoding="UTF-8"?>
<web-app xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns="http://java.sun.com/xml/ns/javaee" xmlns:web="http://java.sun.com/xml/ns/javaee/web-app_2_5.xsd"
	xsi:schemaLocation="http://java.sun.com/xml/ns/javaee http://java.sun.com/xml/ns/javaee/web-app_2_5.xsd"
	version="2.5">
	
	<servlet>
		<servlet-name>SpringMVCDispatcher</servlet-name>
		<servlet-class>org.mspring.mlog.web.DispatcherServlet</servlet-class>
		<init-param>
			<param-name>contextConfigLocation</param-name>
			<param-value>
				classpath:applicationContext-dispatcher.xml
			</param-value>
		</init-param>
		<load-on-startup>1</load-on-startup>
	</servlet>
	<servlet-mapping>
		<servlet-name>SpringMVCDispatcher</servlet-name>
		<url-pattern>/*</url-pattern>
	</servlet-mapping>
	
	
	<servlet>
		<servlet-name>dwr-invoker</servlet-name>
		<servlet-class>
			org.directwebremoting.servlet.DwrServlet
		</servlet-class>
		<init-param>
			<param-name>debug</param-name>
			<param-value>true</param-value>
		</init-param>

	    <!-- DWR默认采用piggyback方式 -->  
	    <!-- 使用polling和comet的方式 -->  
	    <init-param>  
	        <param-name>pollAndCometEnabled</param-name>  
	        <param-value>true</param-value>  
	    </init-param>

	    <!-- comet方式 -->  
	    <!--    
	    <init-param>  
	        <param-name>activeReverseAjaxEnabled</param-name>  
	        <param-value>true</param-value>  
	    </init-param>  
	     -->  

	    <!-- polling方式：在comet方式的基础之上，再配置以下参数 -->  
	    <!--    
	    <init-param>  
	        <param-name>org.directwebremoting.extend.ServerLoadMonitor</param-name>  
	        <param-value>org.directwebremoting.impl.PollingServerLoadMonitor</param-value>  
	    </init-param>  
	     -->  

	    <!-- 毫秒数。页面默认的请求间隔时间是5秒 -->  
	    <!--    
	    <init-param>  
	        <param-name>disconnectedTime</param-name>  
	        <param-value>60000</param-value>    
	    </init-param>  
	     --> 
		<init-param>
			<param-name>crossDomainSessionSecurity</param-name>
			<param-value>false</param-value>
		</init-param>

		<load-on-startup>1</load-on-startup>
	</servlet>
	<servlet-mapping>
		<servlet-name>dwr-invoker</servlet-name>
		<url-pattern>/dwr/*</url-pattern>
	</servlet-mapping>

	<filter>
		<filter-name>encoding</filter-name>
		<filter-class>org.springframework.web.filter.CharacterEncodingFilter</filter-class>
		<init-param>
			<param-name>encoding</param-name>
			<param-value>UTF-8</param-value>
		</init-param>
	</filter>
	<filter-mapping>
		<filter-name>encoding</filter-name>
		<url-pattern>/*</url-pattern>
	</filter-mapping>
	
	<filter>
		<filter-name>UrlRewriteFilter</filter-name>
		<filter-class>org.mspring.platform.web.urlrewrite.UrlRewriteFilter</filter-class>
		<init-param>
			<param-name>logLevel</param-name>
			<param-value>INFO</param-value>
		</init-param>
	</filter>
	<filter-mapping>
		<filter-name>UrlRewriteFilter</filter-name>
		<url-pattern>/*</url-pattern>
	</filter-mapping>
	
	<filter>  
        <filter-name>springSecurityFilterChain</filter-name>  
        <filter-class>  
            org.springframework.web.filter.DelegatingFilterProxy
        </filter-class>  
   	</filter>  
    <filter-mapping>  
        <filter-name>springSecurityFilterChain</filter-name>  
        <url-pattern>/*</url-pattern>  
    </filter-mapping>
    
    <filter>
    	<filter-name>GzipFilter</filter-name>
    	<filter-class>org.mspring.platform.web.filter.GzipFilter</filter-class>
    	<init-param>
    		<param-name>threshold</param-name>
    		<param-value>128</param-value>
    	</init-param>
    	<init-param>
    		<param-name>match</param-name>
    		<param-value>.js,.css,.jpg,.jpeg,.png,.bmp,.html,.htm</param-value>
    	</init-param>
    	<init-param>
    		<param-name>exclude</param-name>
    		<param-value></param-value>
    	</init-param>
    </filter>
    <filter-mapping>
    	<filter-name>GzipFilter</filter-name>
    	<url-pattern>/*</url-pattern>
    </filter-mapping>
	
	<context-param>
		<param-name>contextConfigLocation</param-name>
		<param-value>
			classpath:applicationContext.xml
			classpath:applicationContext-dispatcher.xml
			classpath:applicationContext-job.xml
			classpath:applicationContext-security.xml
		</param-value>
	</context-param>


	<listener>
		<listener-class>org.directwebremoting.servlet.EfficientShutdownServletContextAttributeListener</listener-class>  
	</listener>	
	<listener>
		<listener-class>org.directwebremoting.servlet.EfficientShutdownServletContextListener</listener-class>  
	</listener>
	<listener>
        <listener-class>org.springframework.web.context.request.RequestContextListener</listener-class>  
	</listener>
	<listener>
		<listener-class>org.springframework.web.util.IntrospectorCleanupListener</listener-class>
	</listener>
	<listener>
		<listener-class>org.mspring.mlog.web.listener.StandardStartupListener</listener-class>
	</listener>
	<!-- Spring Security -->
	<listener>
		<listener-class>org.springframework.security.web.session.HttpSessionEventPublisher</listener-class>
	</listener>	
	

	<welcome-file-list>
		<welcome-file>index.jsp</welcome-file>
		<welcome-file>login.jsp</welcome-file>
	</welcome-file-list>
	
	
	<error-page>
		<error-code>401</error-code>
		<location>/admin/login</location>
	</error-page>
	<error-page>
		<error-code>404</error-code>
		<location>/errors/404</location>
	</error-page>
	<error-page>
		<error-code>500</error-code>
		<location>/errors/500</location>
	</error-page>
</web-app>